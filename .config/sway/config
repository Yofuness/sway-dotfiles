# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

# exec bash -c "./proptest.sh"

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
###set $menu dmenu_path | dmenu | xargs swaymsg exec --###
set $menu wofi --show=drun --linues=5 --prompt=""

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg "/home/johann/Pictures/Wallpapers/4K No Logo G655.jpg" fill
output * bg "/home/johann/Pictures/Wallpapers/ameer-basheer-gV6taBJuBTk-unsplash.jpg" fill
#output * bg "/home/johann/Pictures/Wallpapers/IMG_2237.JPG" fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

 output eDP-1 scale 1
set $laptop eDP-1
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable

output DP-4 position 1920,0
output DP-5 position 0,0


### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
exec sway inhibit_idle fullscreen
exec swayidle -w \
	timeout 10000 'swaylock' \
	before-sleep 'playerctl pause' \
	before-sleep 'swaylock' 

bindsym $mod+Shift+Z exec swaylock
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
#	input "2:10:TPPS/2_IBM_TrackPoint" {
#		pointer_accel 0.5

#	}
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

	input "type:keyboard" {
		xkb_layout us,us(dvorak)
		xkb_options grp:rctrl_toggle
		repeat_rate 40
		repeat_delay 200
	}


### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym XF86Search exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    bindsym $mod+$left focus left
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

	bindsym $mod+tab exec $HOME/.config/sway/swaySelectWindow.sh
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
   	
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+q layout default
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
	
	# Sticky a window
	bindsym $mod+Alt+S sticky toggle

    # Sway autotiling
    exec autotiling-rs
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done 
#    icon_theme epapirus
#    # status_command i3blocks 
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}

# Custom status bar waybar config
bar {
	swaybar_command waybar
}

include /etc/sway/config.d/*
include $HOME/.config/sway/config.d/*



# Gaps and window border configuration
gaps inner 5 
gaps outer 5 
client.focused          #90caf9 #90caf9 #90caf9 #90caf9 #90caf9
client.focused_inactive #111111 #111111 #111111 #111111 #111111
client.urgent           #ff0000 #ff0000 #ff0000 #ff0000 #ff0000
client.unfocused        #242424 #242424 #242424 #242424 #242424

# Window border removal
default_border pixel 3

# Automagically hide mouse cursor
seat * hide_cursor 8000
seat * hide_cursor when-typing enable

# Touchpad Natural Scrolling

input type:touchpad {
	tap enabled
	natural_scroll enabled
}

# Media keys
bindsym $mod+ctrl+down exec playerctl stop
bindsym $mod+ctrl+up exec playerctl play-pause
bindsym $mod+ctrl+left exec playerctl previous
bindsym $mod+ctrl+right exec playerctl next

bindsym $mod+z exec playerctl -p spotify play-pause
bindsym $mod+x exec playerctl -p spotify previous
bindsym $mod+c exec playerctl -p spotify next

bindsym $mod+period exec mpc next
bindsym $mod+comma exec mpc prev
bindsym $mod+slash exec mpc toggle
bindsym XF86AudioPlay exec mpc toggle
bindsym $mod+bracketleft exec mpc seekthrough -00:00:05
bindsym $mod+bracketright exec mpc seekthrough +00:00:05

# Screenshot
bindsym $mod+shift+P exec grimshot save screen
bindsym $mod+Alt+P exec XDG_SCREENSHOTS_DIR=$HOME/Pictures/Screenshots/ grimshot copy area
bindsym $mod+P exec XDG_SCREENSHOTS_DIR=$HOME/Pictures/Screenshots/ grimshot save area
bindsym $mod+Alt+R exec bash -c 'rm recording.mkv screenrec.mkv;wf-recorder -r 60 -g "$(slurp)"'
bindsym $mod+ctrl+R exec bash -c 'notify-send "Stopping Recording"; kill -2 $(pgrep wf-recorder)'

# My hotkeys for starting applications
# gtk-launch is used so that it's launched according to the .desktop file
bindsym $mod+Alt+X exec gtk-launch org.gnome.Nautilus
#bindsym $mod+shift+X exec gtk-launch nemo
bindsym $mod+Shift+X exec alacritty -e lf
#bindsym $mod+shift+X exec gtk-launch nemo
bindsym $mod+shift+F exec gtk-launch firefox
#bindsym $mod+shift+D exec gtk-launch discord
bindsym $mod+shift+D exec gtkcord4
bindsym $mod+shift+S exec gtk-launch spotify
bindsym $mod+shift+m exec gtk-launch gnome-system-monitor
bindsym $mod+Shift+a exec gtk-launch com.github.wwmm.easyeffects
bindsym $mod+Alt+A   exec bash -c "killall -9 easyeffects; easyeffects --gapplication-service"
bindsym $mod+Ctrl+A  exec killall -9 easyeffects
bindsym $mod+Shift+O exec gtk-launch blueberry
bindsym $mod+Shift+I exec gtk-launch clightc
bindsym $mod+Alt+V exec gtk-launch virt-manager

# Other Custom Keybinds
bindsym ctrl+alt+delete exec systemmenu

# Floating apps

for_window [app_id="org.gnome.Calculator"] floating enable
for_window [title="Quick Format Citation"] floating enable
for_window [app_id="com.github.wwmm.easyeffects"] floating enable
for_window [title="Extension: (Bitwarden Password Manager) - Bitwarden — Mozilla Firefox"] floating enable
for_window [app_id="nextcloud"] floating enable
for_window [app_id="nextcloud"] move position cursor
for_window [app_id="nextcloud"] resize set 400 600
for_window [app_id="nextcloud"] move down 50
for_window [title="Virtual Machine Manager"] floating enable
for_window [title="Virtual Machine Manager"] resize set 400 600
for_window [title="Virtual Machine Manager"] move position 1500 5



# perhaps fix
exec systemctl --user import-environment
exec_always import-gsettings

# Set Font and Theme for GTK applications
set $gnome-schema org.gnome.desktop.interface
exec_always {
    gsettings set $gnome-schema gtk-theme 'adw-gtk3-dark'
    gsettings set $gnome-schema icon-theme 'ePapirus-Dark'
    gsettings set $gnome-schema cursor-theme 'Adwaita'
    gsettings set $gnome-schema font-name 'Ubuntu 11'
}

	# wob configuration
	set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
	exec_always bash -c "rm $XDG_RUNTIME_DIR/wob.sock"
	exec_always mkfifo $WOBSOCK && tail -f $WOBSOCK | wob

	# brightness
#	bindsym XF86MonBrightnessDown exec brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
#	bindsym XF86MonBrightnessUp exec brightnessctl set +5% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
  # Brightness raise
  bindsym XF86MonBrightnessUp exec swayosd-client --brightness raise
  # Brightness lower
  bindsym XF86MonBrightnessDown exec swayosd-client --brightness lower


	exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK

	# volume
#	bindsym XF86AudioRaiseVolume exec amixer sset Master 5%+ | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $WOBSOCK
#	bindsym XF86AudioLowerVolume exec amixer sset Master 5%- | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $WOBSOCK
#	bindsym XF86AudioMute exec amixer sset Master toggle | sed -En '/\[on\]/ s/.*\[([0-9]+)%\].*/\1/ p; /\[off\]/ s/.*/0/p' | head -1 > $WOBSOCK
# Volume raise with max value
  bindsym XF86AudioRaiseVolume exec swayosd-client --output-volume raise --max-volume 100
# Volume lower with max value
  bindsym XF86AudioLowerVolume exec swayosd-client --output-volume lower --max-volume 100
	bindsym $mod+XF86AudioMute exec pavucontrol

  # Capslock (If you don't want to use the backend)
  bindsym --release Caps_Lock exec swayosd-client --caps-lock

# Environment variables
	exec --no-startup-id export XDG_CURRENT_DESKTOP=sway


# Polkit configuration (for authentication window)
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# Apps to autostart
	
	# Nextcloud desktop client
	exec bash -c "sleep 10; /usr/bin/nextcloud --background"
	exec easyeffects --gapplication-service
	exec ssh-add
	exec kdeconnect-indicator
	exec mako
	exec clight -c /home/johann/.config/clight.conf >> /home/johann/.local/log/clight.log
  exec swayosd-server
